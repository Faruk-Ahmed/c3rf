function [nodeBel, edgeBel, logZ, new_msg, MSGS_FOR_UP_TREES] = Infer_LBP_modified(MSG_FROM_NODE,edgePot,edgeStruct, NODE_POT, messages_DOWNTREE, nNeighbors, calc_margs, useDamping, messages_old, ALPHA, MSG_FROM_NODE_POT)

MSG_FROM_NODE_POT = my_norm_log(NODE_POT);

[nodeBel, edgeBel, logZ, new_msg, MSGS_FOR_UP_TREES] = LBP_log(my_log(MSG_FROM_NODE), ...
                                                                      MSG_FROM_NODE_POT, ...
                                                                      NODE_POT, ...
                                                                      my_log(messages_DOWNTREE), ...
                                                                      int32(nNeighbors), ...
                                                                      edgePot, ...
                                                                      int32(edgeStruct.edgeEnds),int32(edgeStruct.nStates),int32(edgeStruct.V),int32(edgeStruct.E),edgeStruct.maxIter, ...
                                                                      int32(calc_margs), int32(useDamping), my_log(messages_old), ALPHA);


nodeBel = exp(nodeBel);
edgeBel = exp(edgeBel);
new_msg = exp(new_msg);
MSGS_FOR_UP_TREES = exp(MSGS_FOR_UP_TREES);

MSGS_FOR_UP_TREES = MSGS_FOR_UP_TREES ./ repmat(sum(MSGS_FOR_UP_TREES,2), 1, 2);
